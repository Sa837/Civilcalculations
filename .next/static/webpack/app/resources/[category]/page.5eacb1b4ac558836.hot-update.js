"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/resources/[category]/page",{

/***/ "(app-pages-browser)/./lib/data/resources.ts":
/*!*******************************!*\
  !*** ./lib/data/resources.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCategoryCounts: function() { return /* binding */ getCategoryCounts; },\n/* harmony export */   getRegionCounts: function() { return /* binding */ getRegionCounts; },\n/* harmony export */   getResourceBySlug: function() { return /* binding */ getResourceBySlug; },\n/* harmony export */   getResourcesByCategory: function() { return /* binding */ getResourcesByCategory; },\n/* harmony export */   getResourcesByRegion: function() { return /* binding */ getResourcesByRegion; },\n/* harmony export */   resources: function() { return /* binding */ resources; }\n/* harmony export */ });\nconst resources = [\n    // Nepal Resources\n    {\n        slug: \"nepal-building-codes\",\n        title: \"Nepal Building Codes (NBC)\",\n        description: \"Complete collection of Nepal Building Codes including NBC 105, 205, and other structural design codes.\",\n        category: \"Codes\",\n        region: \"Nepal\",\n        subItems: [\n            {\n                \"title\": \"Nepal Building Code NBC 105:2020 - Seismic Design of Buildings in Nepal\",\n                \"url\": \"https://giwmscdntwo.gov.np/media/app/public/54/posts/1679824087_98.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 206:2024 - Architectural Design Requirements\",\n                \"url\": \"https://giwmscdntwo.gov.np/media/pdf_upload/NBC_206_ARCHITECTURAL_DESIGN_REQUIREMENTS-signed.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 207:2003 - Electrical Design Requirements for Public Buildings\",\n                \"url\": \"https://giwmscdntwo.gov.np/media/app/public/54/posts/1679824531_73.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 208:2003 - Sanitary and Plumbing Design Requirements\",\n                \"url\": \"https://giwmscdntwo.gov.np/media/app/public/54/posts/1679824552_72.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 204:2015 - Guidelines for Earthquake Resistant Building Construction (Earthen Building)\",\n                \"url\": \"https://giwmscdntwo.gov.np/media/app/public/54/posts/1679824397_8.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 203:2015 - Guidelines for Earthquake Resistant Building Construction (Low Strength Masonry)\",\n                \"url\": \"https://giwmscdntwo.gov.np/media/app/public/54/posts/1679826255_5.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 202:2015 - Guidelines on Load Bearing Masonry\",\n                \"url\": \"https://giwmscdnone.gov.np/media/app/public/54/posts/1679824354_21.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 201:1994 - Mandatory Rules of Thumb for Reinforced Concrete Buildings with Masonry Infill\",\n                \"url\": \"https://www.iibh.org/kijun/pdf/Nepal_20_NBC_201_1994_Thumb_RC_with_Masonry.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 114:1994 - Construction Safety\",\n                \"url\": \"https://giwmscdntwo.gov.np/media/app/public/54/posts/1679824289_7.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 113:1994 - Aluminium\",\n                \"url\": \"https://giwmscdntwo.gov.np/media/app/public/54/posts/1679824268_75.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 112:1994 - Timber\",\n                \"url\": \"https://giwmscdntwo.gov.np/media/app/public/54/posts/1679824246_20.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 111:1994 - Steel\",\n                \"url\": \"https://giwmscdntwo.gov.np/media/app/public/54/posts/1679824223_46.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 110:1994 - Plain and Reinforced Concrete\",\n                \"url\": \"https://giwmscdntwo.gov.np/media/app/public/54/posts/1679824202_6.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 109:1994 - Unreinforced Masonry\",\n                \"url\": \"https://giwmscdntwo.gov.np/media/app/public/54/posts/1679824181_36.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 108:1994 - Site Consideration for Seismic Hazards\",\n                \"url\": \"https://giwmscdntwo.gov.np/media/app/public/54/posts/1679824158_65.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 107:1994 - Provisional Recommendation on Fire Safety\",\n                \"url\": \"https://giwmscdntwo.gov.np/media/app/public/54/posts/1679824137_8.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 106:1994 - Snow Load\",\n                \"url\": \"https://giwmscdntwo.gov.np/media/app/public/54/posts/1679824116_40.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 104:1994 - Wind Load\",\n                \"url\": \"https://giwmscdntwo.gov.np/media/app/public/54/posts/1679824060_73.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 103:1994 - Occupancy Load (Imposed Load)\",\n                \"url\": \"https://giwmscdntwo.gov.np/media/app/public/54/posts/1679823542_78.pdf\"\n            }\n        ],\n        createdAt: new Date(\"2024-01-15\"),\n        updatedAt: new Date(\"2024-01-15\")\n    },\n    {\n        slug: \"nepal-district-rates\",\n        title: \"Nepal District Rates\",\n        description: \"Construction material rates, labor costs, and equipment rental rates for all districts in Nepal.\",\n        category: \"District Rates\",\n        region: \"Nepal\",\n        subItems: [\n            {\n                title: \"Kathmandu District Rates\",\n                url: \"/resources/nepal-district-rates/kathmandu\"\n            },\n            {\n                title: \"Pokhara District Rates\",\n                url: \"/resources/nepal-district-rates/pokhara\"\n            },\n            {\n                title: \"Lalitpur District Rates\",\n                url: \"/resources/nepal-district-rates/lalitpur\"\n            },\n            {\n                title: \"Bhaktapur District Rates\",\n                url: \"/resources/nepal-district-rates/bhaktapur\"\n            }\n        ],\n        createdAt: new Date(\"2024-01-10\"),\n        updatedAt: new Date(\"2024-01-10\")\n    },\n    {\n        slug: \"nepal-construction-regulations\",\n        title: \"Construction Rules and Regulations\",\n        description: \"Rules and regulations governing construction activities in Nepal.\",\n        category: \"Rules and Regulations\",\n        region: \"Nepal\",\n        createdAt: new Date(\"2024-01-08\"),\n        updatedAt: new Date(\"2024-01-08\")\n    },\n    {\n        slug: \"nepal-construction-notes\",\n        title: \"Construction Notes\",\n        description: \"Practical notes and guidelines for construction projects in Nepal.\",\n        category: \"Notes\",\n        region: \"Nepal\",\n        createdAt: new Date(\"2024-01-05\"),\n        updatedAt: new Date(\"2024-01-05\")\n    },\n    {\n        slug: \"nepal-construction-notices\",\n        title: \"Construction Notices\",\n        description: \"Latest notices and updates from Nepal construction industry.\",\n        category: \"Notices\",\n        region: \"Nepal\",\n        createdAt: new Date(\"2024-01-12\"),\n        updatedAt: new Date(\"2024-01-12\")\n    }\n];\nconst getResourcesByCategory = (category)=>{\n    return resources.filter((resource)=>resource.category === category);\n};\nconst getResourcesByRegion = (region)=>{\n    return resources.filter((resource)=>resource.region === region);\n};\nconst getResourceBySlug = (slug)=>{\n    return resources.find((resource)=>resource.slug === slug);\n};\nconst getCategoryCounts = ()=>{\n    const counts = {};\n    resources.forEach((resource)=>{\n        counts[resource.category] = (counts[resource.category] || 0) + 1;\n    });\n    return counts;\n};\nconst getRegionCounts = ()=>{\n    const counts = {};\n    resources.forEach((resource)=>{\n        counts[resource.region] = (counts[resource.region] || 0) + 1;\n    });\n    return counts;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9kYXRhL3Jlc291cmNlcy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFFTyxNQUFNQSxZQUF3QjtJQUNuQyxrQkFBa0I7SUFDbEI7UUFDRUMsTUFBTTtRQUNOQyxPQUFPO1FBQ1BDLGFBQWE7UUFDYkMsVUFBVTtRQUNWQyxRQUFRO1FBQ1JDLFVBQVU7WUFDUjtnQkFBRSxTQUFTO2dCQUEyRSxPQUFPO1lBQXlFO1lBQ3RLO2dCQUFFLFNBQVM7Z0JBQXdFLE9BQU87WUFBbUc7WUFDN0w7Z0JBQUUsU0FBUztnQkFBMEYsT0FBTztZQUF5RTtZQUNyTDtnQkFBRSxTQUFTO2dCQUFnRixPQUFPO1lBQXlFO1lBQzNLO2dCQUFFLFNBQVM7Z0JBQW1ILE9BQU87WUFBd0U7WUFDN007Z0JBQUUsU0FBUztnQkFBdUgsT0FBTztZQUF3RTtZQUNqTjtnQkFBRSxTQUFTO2dCQUF5RSxPQUFPO1lBQXlFO1lBQ3BLO2dCQUFFLFNBQVM7Z0JBQXFILE9BQU87WUFBaUY7WUFDeE47Z0JBQUUsU0FBUztnQkFBMEQsT0FBTztZQUF3RTtZQUNwSjtnQkFBRSxTQUFTO2dCQUFnRCxPQUFPO1lBQXlFO1lBQzNJO2dCQUFFLFNBQVM7Z0JBQTZDLE9BQU87WUFBeUU7WUFDeEk7Z0JBQUUsU0FBUztnQkFBNEMsT0FBTztZQUF5RTtZQUN2STtnQkFBRSxTQUFTO2dCQUFvRSxPQUFPO1lBQXdFO1lBQzlKO2dCQUFFLFNBQVM7Z0JBQTJELE9BQU87WUFBeUU7WUFDdEo7Z0JBQUUsU0FBUztnQkFBNkUsT0FBTztZQUF5RTtZQUN4SztnQkFBRSxTQUFTO2dCQUFnRixPQUFPO1lBQXdFO1lBQzFLO2dCQUFFLFNBQVM7Z0JBQWdELE9BQU87WUFBeUU7WUFDM0k7Z0JBQUUsU0FBUztnQkFBZ0QsT0FBTztZQUF5RTtZQUMzSTtnQkFBRSxTQUFTO2dCQUFvRSxPQUFPO1lBQXlFO1NBQ2hLO1FBRURDLFdBQVcsSUFBSUMsS0FBSztRQUNwQkMsV0FBVyxJQUFJRCxLQUFLO0lBQ3RCO0lBQ0E7UUFDRVAsTUFBTTtRQUNOQyxPQUFPO1FBQ1BDLGFBQWE7UUFDYkMsVUFBVTtRQUNWQyxRQUFRO1FBQ1JDLFVBQVU7WUFDUjtnQkFBRUosT0FBTztnQkFBNEJRLEtBQUs7WUFBNEM7WUFDdEY7Z0JBQUVSLE9BQU87Z0JBQTBCUSxLQUFLO1lBQTBDO1lBQ2xGO2dCQUFFUixPQUFPO2dCQUEyQlEsS0FBSztZQUEyQztZQUNwRjtnQkFBRVIsT0FBTztnQkFBNEJRLEtBQUs7WUFBNEM7U0FDdkY7UUFDREgsV0FBVyxJQUFJQyxLQUFLO1FBQ3BCQyxXQUFXLElBQUlELEtBQUs7SUFDdEI7SUFDQTtRQUNFUCxNQUFNO1FBQ05DLE9BQU87UUFDUEMsYUFBYTtRQUNiQyxVQUFVO1FBQ1ZDLFFBQVE7UUFDUkUsV0FBVyxJQUFJQyxLQUFLO1FBQ3BCQyxXQUFXLElBQUlELEtBQUs7SUFDdEI7SUFDQTtRQUNFUCxNQUFNO1FBQ05DLE9BQU87UUFDUEMsYUFBYTtRQUNiQyxVQUFVO1FBQ1ZDLFFBQVE7UUFDUkUsV0FBVyxJQUFJQyxLQUFLO1FBQ3BCQyxXQUFXLElBQUlELEtBQUs7SUFDdEI7SUFDQTtRQUNFUCxNQUFNO1FBQ05DLE9BQU87UUFDUEMsYUFBYTtRQUNiQyxVQUFVO1FBQ1ZDLFFBQVE7UUFDUkUsV0FBVyxJQUFJQyxLQUFLO1FBQ3BCQyxXQUFXLElBQUlELEtBQUs7SUFDdEI7Q0E2T0Q7QUFFTSxNQUFNRyx5QkFBeUIsQ0FBQ1A7SUFDckMsT0FBT0osVUFBVVksTUFBTSxDQUFDQyxDQUFBQSxXQUFZQSxTQUFTVCxRQUFRLEtBQUtBO0FBQzVELEVBQUM7QUFFTSxNQUFNVSx1QkFBdUIsQ0FBQ1Q7SUFDbkMsT0FBT0wsVUFBVVksTUFBTSxDQUFDQyxDQUFBQSxXQUFZQSxTQUFTUixNQUFNLEtBQUtBO0FBQzFELEVBQUM7QUFFTSxNQUFNVSxvQkFBb0IsQ0FBQ2Q7SUFDaEMsT0FBT0QsVUFBVWdCLElBQUksQ0FBQ0gsQ0FBQUEsV0FBWUEsU0FBU1osSUFBSSxLQUFLQTtBQUN0RCxFQUFDO0FBRU0sTUFBTWdCLG9CQUFvQjtJQUMvQixNQUFNQyxTQUFpQyxDQUFDO0lBQ3hDbEIsVUFBVW1CLE9BQU8sQ0FBQ04sQ0FBQUE7UUFDaEJLLE1BQU0sQ0FBQ0wsU0FBU1QsUUFBUSxDQUFDLEdBQUcsQ0FBQ2MsTUFBTSxDQUFDTCxTQUFTVCxRQUFRLENBQUMsSUFBSSxLQUFLO0lBQ2pFO0lBQ0EsT0FBT2M7QUFDVCxFQUFDO0FBRU0sTUFBTUUsa0JBQWtCO0lBQzdCLE1BQU1GLFNBQWlDLENBQUM7SUFDeENsQixVQUFVbUIsT0FBTyxDQUFDTixDQUFBQTtRQUNoQkssTUFBTSxDQUFDTCxTQUFTUixNQUFNLENBQUMsR0FBRyxDQUFDYSxNQUFNLENBQUNMLFNBQVNSLE1BQU0sQ0FBQyxJQUFJLEtBQUs7SUFDN0Q7SUFDQSxPQUFPYTtBQUNULEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL2RhdGEvcmVzb3VyY2VzLnRzPzEzYWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVzb3VyY2UgfSBmcm9tICcuLi90eXBlcy9yZXNvdXJjZXMnXHJcblxyXG5leHBvcnQgY29uc3QgcmVzb3VyY2VzOiBSZXNvdXJjZVtdID0gW1xyXG4gIC8vIE5lcGFsIFJlc291cmNlc1xyXG4gIHtcclxuICAgIHNsdWc6ICduZXBhbC1idWlsZGluZy1jb2RlcycsXHJcbiAgICB0aXRsZTogJ05lcGFsIEJ1aWxkaW5nIENvZGVzIChOQkMpJyxcclxuICAgIGRlc2NyaXB0aW9uOiAnQ29tcGxldGUgY29sbGVjdGlvbiBvZiBOZXBhbCBCdWlsZGluZyBDb2RlcyBpbmNsdWRpbmcgTkJDIDEwNSwgMjA1LCBhbmQgb3RoZXIgc3RydWN0dXJhbCBkZXNpZ24gY29kZXMuJyxcclxuICAgIGNhdGVnb3J5OiAnQ29kZXMnLFxyXG4gICAgcmVnaW9uOiAnTmVwYWwnLFxyXG4gICAgc3ViSXRlbXM6IFtcclxuICAgICAgeyBcInRpdGxlXCI6IFwiTmVwYWwgQnVpbGRpbmcgQ29kZSBOQkMgMTA1OjIwMjAgLSBTZWlzbWljIERlc2lnbiBvZiBCdWlsZGluZ3MgaW4gTmVwYWxcIiwgXCJ1cmxcIjogXCJodHRwczovL2dpd21zY2RudHdvLmdvdi5ucC9tZWRpYS9hcHAvcHVibGljLzU0L3Bvc3RzLzE2Nzk4MjQwODdfOTgucGRmXCIgfSxcclxuICAgICAgeyBcInRpdGxlXCI6IFwiTmVwYWwgQnVpbGRpbmcgQ29kZSBOQkMgMjA2OjIwMjQgLSBBcmNoaXRlY3R1cmFsIERlc2lnbiBSZXF1aXJlbWVudHNcIiwgXCJ1cmxcIjogXCJodHRwczovL2dpd21zY2RudHdvLmdvdi5ucC9tZWRpYS9wZGZfdXBsb2FkL05CQ18yMDZfQVJDSElURUNUVVJBTF9ERVNJR05fUkVRVUlSRU1FTlRTLXNpZ25lZC5wZGZcIiB9LFxyXG4gICAgICB7IFwidGl0bGVcIjogXCJOZXBhbCBCdWlsZGluZyBDb2RlIE5CQyAyMDc6MjAwMyAtIEVsZWN0cmljYWwgRGVzaWduIFJlcXVpcmVtZW50cyBmb3IgUHVibGljIEJ1aWxkaW5nc1wiLCBcInVybFwiOiBcImh0dHBzOi8vZ2l3bXNjZG50d28uZ292Lm5wL21lZGlhL2FwcC9wdWJsaWMvNTQvcG9zdHMvMTY3OTgyNDUzMV83My5wZGZcIiB9LFxyXG4gICAgICB7IFwidGl0bGVcIjogXCJOZXBhbCBCdWlsZGluZyBDb2RlIE5CQyAyMDg6MjAwMyAtIFNhbml0YXJ5IGFuZCBQbHVtYmluZyBEZXNpZ24gUmVxdWlyZW1lbnRzXCIsIFwidXJsXCI6IFwiaHR0cHM6Ly9naXdtc2NkbnR3by5nb3YubnAvbWVkaWEvYXBwL3B1YmxpYy81NC9wb3N0cy8xNjc5ODI0NTUyXzcyLnBkZlwiIH0sXHJcbiAgICAgIHsgXCJ0aXRsZVwiOiBcIk5lcGFsIEJ1aWxkaW5nIENvZGUgTkJDIDIwNDoyMDE1IC0gR3VpZGVsaW5lcyBmb3IgRWFydGhxdWFrZSBSZXNpc3RhbnQgQnVpbGRpbmcgQ29uc3RydWN0aW9uIChFYXJ0aGVuIEJ1aWxkaW5nKVwiLCBcInVybFwiOiBcImh0dHBzOi8vZ2l3bXNjZG50d28uZ292Lm5wL21lZGlhL2FwcC9wdWJsaWMvNTQvcG9zdHMvMTY3OTgyNDM5N184LnBkZlwiIH0sXHJcbiAgICAgIHsgXCJ0aXRsZVwiOiBcIk5lcGFsIEJ1aWxkaW5nIENvZGUgTkJDIDIwMzoyMDE1IC0gR3VpZGVsaW5lcyBmb3IgRWFydGhxdWFrZSBSZXNpc3RhbnQgQnVpbGRpbmcgQ29uc3RydWN0aW9uIChMb3cgU3RyZW5ndGggTWFzb25yeSlcIiwgXCJ1cmxcIjogXCJodHRwczovL2dpd21zY2RudHdvLmdvdi5ucC9tZWRpYS9hcHAvcHVibGljLzU0L3Bvc3RzLzE2Nzk4MjYyNTVfNS5wZGZcIiB9LFxyXG4gICAgICB7IFwidGl0bGVcIjogXCJOZXBhbCBCdWlsZGluZyBDb2RlIE5CQyAyMDI6MjAxNSAtIEd1aWRlbGluZXMgb24gTG9hZCBCZWFyaW5nIE1hc29ucnlcIiwgXCJ1cmxcIjogXCJodHRwczovL2dpd21zY2Rub25lLmdvdi5ucC9tZWRpYS9hcHAvcHVibGljLzU0L3Bvc3RzLzE2Nzk4MjQzNTRfMjEucGRmXCIgfSxcclxuICAgICAgeyBcInRpdGxlXCI6IFwiTmVwYWwgQnVpbGRpbmcgQ29kZSBOQkMgMjAxOjE5OTQgLSBNYW5kYXRvcnkgUnVsZXMgb2YgVGh1bWIgZm9yIFJlaW5mb3JjZWQgQ29uY3JldGUgQnVpbGRpbmdzIHdpdGggTWFzb25yeSBJbmZpbGxcIiwgXCJ1cmxcIjogXCJodHRwczovL3d3dy5paWJoLm9yZy9raWp1bi9wZGYvTmVwYWxfMjBfTkJDXzIwMV8xOTk0X1RodW1iX1JDX3dpdGhfTWFzb25yeS5wZGZcIiB9LFxyXG4gICAgICB7IFwidGl0bGVcIjogXCJOZXBhbCBCdWlsZGluZyBDb2RlIE5CQyAxMTQ6MTk5NCAtIENvbnN0cnVjdGlvbiBTYWZldHlcIiwgXCJ1cmxcIjogXCJodHRwczovL2dpd21zY2RudHdvLmdvdi5ucC9tZWRpYS9hcHAvcHVibGljLzU0L3Bvc3RzLzE2Nzk4MjQyODlfNy5wZGZcIiB9LFxyXG4gICAgICB7IFwidGl0bGVcIjogXCJOZXBhbCBCdWlsZGluZyBDb2RlIE5CQyAxMTM6MTk5NCAtIEFsdW1pbml1bVwiLCBcInVybFwiOiBcImh0dHBzOi8vZ2l3bXNjZG50d28uZ292Lm5wL21lZGlhL2FwcC9wdWJsaWMvNTQvcG9zdHMvMTY3OTgyNDI2OF83NS5wZGZcIiB9LFxyXG4gICAgICB7IFwidGl0bGVcIjogXCJOZXBhbCBCdWlsZGluZyBDb2RlIE5CQyAxMTI6MTk5NCAtIFRpbWJlclwiLCBcInVybFwiOiBcImh0dHBzOi8vZ2l3bXNjZG50d28uZ292Lm5wL21lZGlhL2FwcC9wdWJsaWMvNTQvcG9zdHMvMTY3OTgyNDI0Nl8yMC5wZGZcIiB9LFxyXG4gICAgICB7IFwidGl0bGVcIjogXCJOZXBhbCBCdWlsZGluZyBDb2RlIE5CQyAxMTE6MTk5NCAtIFN0ZWVsXCIsIFwidXJsXCI6IFwiaHR0cHM6Ly9naXdtc2NkbnR3by5nb3YubnAvbWVkaWEvYXBwL3B1YmxpYy81NC9wb3N0cy8xNjc5ODI0MjIzXzQ2LnBkZlwiIH0sXHJcbiAgICAgIHsgXCJ0aXRsZVwiOiBcIk5lcGFsIEJ1aWxkaW5nIENvZGUgTkJDIDExMDoxOTk0IC0gUGxhaW4gYW5kIFJlaW5mb3JjZWQgQ29uY3JldGVcIiwgXCJ1cmxcIjogXCJodHRwczovL2dpd21zY2RudHdvLmdvdi5ucC9tZWRpYS9hcHAvcHVibGljLzU0L3Bvc3RzLzE2Nzk4MjQyMDJfNi5wZGZcIiB9LFxyXG4gICAgICB7IFwidGl0bGVcIjogXCJOZXBhbCBCdWlsZGluZyBDb2RlIE5CQyAxMDk6MTk5NCAtIFVucmVpbmZvcmNlZCBNYXNvbnJ5XCIsIFwidXJsXCI6IFwiaHR0cHM6Ly9naXdtc2NkbnR3by5nb3YubnAvbWVkaWEvYXBwL3B1YmxpYy81NC9wb3N0cy8xNjc5ODI0MTgxXzM2LnBkZlwiIH0sXHJcbiAgICAgIHsgXCJ0aXRsZVwiOiBcIk5lcGFsIEJ1aWxkaW5nIENvZGUgTkJDIDEwODoxOTk0IC0gU2l0ZSBDb25zaWRlcmF0aW9uIGZvciBTZWlzbWljIEhhemFyZHNcIiwgXCJ1cmxcIjogXCJodHRwczovL2dpd21zY2RudHdvLmdvdi5ucC9tZWRpYS9hcHAvcHVibGljLzU0L3Bvc3RzLzE2Nzk4MjQxNThfNjUucGRmXCIgfSxcclxuICAgICAgeyBcInRpdGxlXCI6IFwiTmVwYWwgQnVpbGRpbmcgQ29kZSBOQkMgMTA3OjE5OTQgLSBQcm92aXNpb25hbCBSZWNvbW1lbmRhdGlvbiBvbiBGaXJlIFNhZmV0eVwiLCBcInVybFwiOiBcImh0dHBzOi8vZ2l3bXNjZG50d28uZ292Lm5wL21lZGlhL2FwcC9wdWJsaWMvNTQvcG9zdHMvMTY3OTgyNDEzN184LnBkZlwiIH0sXHJcbiAgICAgIHsgXCJ0aXRsZVwiOiBcIk5lcGFsIEJ1aWxkaW5nIENvZGUgTkJDIDEwNjoxOTk0IC0gU25vdyBMb2FkXCIsIFwidXJsXCI6IFwiaHR0cHM6Ly9naXdtc2NkbnR3by5nb3YubnAvbWVkaWEvYXBwL3B1YmxpYy81NC9wb3N0cy8xNjc5ODI0MTE2XzQwLnBkZlwiIH0sXHJcbiAgICAgIHsgXCJ0aXRsZVwiOiBcIk5lcGFsIEJ1aWxkaW5nIENvZGUgTkJDIDEwNDoxOTk0IC0gV2luZCBMb2FkXCIsIFwidXJsXCI6IFwiaHR0cHM6Ly9naXdtc2NkbnR3by5nb3YubnAvbWVkaWEvYXBwL3B1YmxpYy81NC9wb3N0cy8xNjc5ODI0MDYwXzczLnBkZlwiIH0sXHJcbiAgICAgIHsgXCJ0aXRsZVwiOiBcIk5lcGFsIEJ1aWxkaW5nIENvZGUgTkJDIDEwMzoxOTk0IC0gT2NjdXBhbmN5IExvYWQgKEltcG9zZWQgTG9hZClcIiwgXCJ1cmxcIjogXCJodHRwczovL2dpd21zY2RudHdvLmdvdi5ucC9tZWRpYS9hcHAvcHVibGljLzU0L3Bvc3RzLzE2Nzk4MjM1NDJfNzgucGRmXCIgfVxyXG4gICAgXVxyXG4gICAgLFxyXG4gICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNC0wMS0xNScpLFxyXG4gICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNC0wMS0xNScpXHJcbiAgfSxcclxuICB7XHJcbiAgICBzbHVnOiAnbmVwYWwtZGlzdHJpY3QtcmF0ZXMnLFxyXG4gICAgdGl0bGU6ICdOZXBhbCBEaXN0cmljdCBSYXRlcycsXHJcbiAgICBkZXNjcmlwdGlvbjogJ0NvbnN0cnVjdGlvbiBtYXRlcmlhbCByYXRlcywgbGFib3IgY29zdHMsIGFuZCBlcXVpcG1lbnQgcmVudGFsIHJhdGVzIGZvciBhbGwgZGlzdHJpY3RzIGluIE5lcGFsLicsXHJcbiAgICBjYXRlZ29yeTogJ0Rpc3RyaWN0IFJhdGVzJyxcclxuICAgIHJlZ2lvbjogJ05lcGFsJyxcclxuICAgIHN1Ykl0ZW1zOiBbXHJcbiAgICAgIHsgdGl0bGU6ICdLYXRobWFuZHUgRGlzdHJpY3QgUmF0ZXMnLCB1cmw6ICcvcmVzb3VyY2VzL25lcGFsLWRpc3RyaWN0LXJhdGVzL2thdGhtYW5kdScgfSxcclxuICAgICAgeyB0aXRsZTogJ1Bva2hhcmEgRGlzdHJpY3QgUmF0ZXMnLCB1cmw6ICcvcmVzb3VyY2VzL25lcGFsLWRpc3RyaWN0LXJhdGVzL3Bva2hhcmEnIH0sXHJcbiAgICAgIHsgdGl0bGU6ICdMYWxpdHB1ciBEaXN0cmljdCBSYXRlcycsIHVybDogJy9yZXNvdXJjZXMvbmVwYWwtZGlzdHJpY3QtcmF0ZXMvbGFsaXRwdXInIH0sXHJcbiAgICAgIHsgdGl0bGU6ICdCaGFrdGFwdXIgRGlzdHJpY3QgUmF0ZXMnLCB1cmw6ICcvcmVzb3VyY2VzL25lcGFsLWRpc3RyaWN0LXJhdGVzL2JoYWt0YXB1cicgfVxyXG4gICAgXSxcclxuICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoJzIwMjQtMDEtMTAnKSxcclxuICAgIHVwZGF0ZWRBdDogbmV3IERhdGUoJzIwMjQtMDEtMTAnKVxyXG4gIH0sXHJcbiAge1xyXG4gICAgc2x1ZzogJ25lcGFsLWNvbnN0cnVjdGlvbi1yZWd1bGF0aW9ucycsXHJcbiAgICB0aXRsZTogJ0NvbnN0cnVjdGlvbiBSdWxlcyBhbmQgUmVndWxhdGlvbnMnLFxyXG4gICAgZGVzY3JpcHRpb246ICdSdWxlcyBhbmQgcmVndWxhdGlvbnMgZ292ZXJuaW5nIGNvbnN0cnVjdGlvbiBhY3Rpdml0aWVzIGluIE5lcGFsLicsXHJcbiAgICBjYXRlZ29yeTogJ1J1bGVzIGFuZCBSZWd1bGF0aW9ucycsXHJcbiAgICByZWdpb246ICdOZXBhbCcsXHJcbiAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKCcyMDI0LTAxLTA4JyksXHJcbiAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKCcyMDI0LTAxLTA4JylcclxuICB9LFxyXG4gIHtcclxuICAgIHNsdWc6ICduZXBhbC1jb25zdHJ1Y3Rpb24tbm90ZXMnLFxyXG4gICAgdGl0bGU6ICdDb25zdHJ1Y3Rpb24gTm90ZXMnLFxyXG4gICAgZGVzY3JpcHRpb246ICdQcmFjdGljYWwgbm90ZXMgYW5kIGd1aWRlbGluZXMgZm9yIGNvbnN0cnVjdGlvbiBwcm9qZWN0cyBpbiBOZXBhbC4nLFxyXG4gICAgY2F0ZWdvcnk6ICdOb3RlcycsXHJcbiAgICByZWdpb246ICdOZXBhbCcsXHJcbiAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKCcyMDI0LTAxLTA1JyksXHJcbiAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKCcyMDI0LTAxLTA1JylcclxuICB9LFxyXG4gIHtcclxuICAgIHNsdWc6ICduZXBhbC1jb25zdHJ1Y3Rpb24tbm90aWNlcycsXHJcbiAgICB0aXRsZTogJ0NvbnN0cnVjdGlvbiBOb3RpY2VzJyxcclxuICAgIGRlc2NyaXB0aW9uOiAnTGF0ZXN0IG5vdGljZXMgYW5kIHVwZGF0ZXMgZnJvbSBOZXBhbCBjb25zdHJ1Y3Rpb24gaW5kdXN0cnkuJyxcclxuICAgIGNhdGVnb3J5OiAnTm90aWNlcycsXHJcbiAgICByZWdpb246ICdOZXBhbCcsXHJcbiAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKCcyMDI0LTAxLTEyJyksXHJcbiAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKCcyMDI0LTAxLTEyJylcclxuICB9LFxyXG4vKlxyXG4gIC8vIEluZGlhIFJlc291cmNlc1xyXG4gIHtcclxuICAgIHNsdWc6ICdpbmRpYW4tYnVpbGRpbmctY29kZXMnLFxyXG4gICAgdGl0bGU6ICdJbmRpYW4gQnVpbGRpbmcgQ29kZXMnLFxyXG4gICAgZGVzY3JpcHRpb246ICdDb21wbGV0ZSBjb2xsZWN0aW9uIG9mIEluZGlhbiBTdGFuZGFyZHMgKElTKSBjb2RlcyBmb3IgY2l2aWwgZW5naW5lZXJpbmcgYW5kIGNvbnN0cnVjdGlvbi4nLFxyXG4gICAgY2F0ZWdvcnk6ICdDb2RlcycsXHJcbiAgICByZWdpb246ICdJbmRpYScsXHJcbiAgICBzdWJJdGVtczogW1xyXG4gICAgICB7IHRpdGxlOiAnSVMgNDU2IC0gQ29uY3JldGUgQ29kZScsIHVybDogJy9yZXNvdXJjZXMvaW5kaWFuLWJ1aWxkaW5nLWNvZGVzL2lzLTQ1NicgfSxcclxuICAgICAgeyB0aXRsZTogJ0lTIDgwMCAtIFN0ZWVsIERlc2lnbicsIHVybDogJy9yZXNvdXJjZXMvaW5kaWFuLWJ1aWxkaW5nLWNvZGVzL2lzLTgwMCcgfSxcclxuICAgICAgeyB0aXRsZTogJ0lTIDg3NSAtIExvYWQgU3RhbmRhcmRzJywgdXJsOiAnL3Jlc291cmNlcy9pbmRpYW4tYnVpbGRpbmctY29kZXMvaXMtODc1JyB9LFxyXG4gICAgICB7IHRpdGxlOiAnSVMgMTg5MyAtIFNlaXNtaWMgRGVzaWduJywgdXJsOiAnL3Jlc291cmNlcy9pbmRpYW4tYnVpbGRpbmctY29kZXMvaXMtMTg5MycgfVxyXG4gICAgXSxcclxuICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoJzIwMjQtMDEtMTQnKSxcclxuICAgIHVwZGF0ZWRBdDogbmV3IERhdGUoJzIwMjQtMDEtMTQnKVxyXG4gIH0sXHJcbiAge1xyXG4gICAgc2x1ZzogJ2luZGlhbi1kaXN0cmljdC1yYXRlcycsXHJcbiAgICB0aXRsZTogJ0luZGlhbiBEaXN0cmljdCBSYXRlcycsXHJcbiAgICBkZXNjcmlwdGlvbjogJ0NvbnN0cnVjdGlvbiBtYXRlcmlhbCByYXRlcywgbGFib3IgY29zdHMsIGFuZCBlcXVpcG1lbnQgcmVudGFsIHJhdGVzIGZvciBtYWpvciBJbmRpYW4gY2l0aWVzLicsXHJcbiAgICBjYXRlZ29yeTogJ0Rpc3RyaWN0IFJhdGVzJyxcclxuICAgIHJlZ2lvbjogJ0luZGlhJyxcclxuICAgIHN1Ykl0ZW1zOiBbXHJcbiAgICAgIHsgdGl0bGU6ICdEZWxoaSBEaXN0cmljdCBSYXRlcycsIHVybDogJy9yZXNvdXJjZXMvaW5kaWFuLWRpc3RyaWN0LXJhdGVzL2RlbGhpJyB9LFxyXG4gICAgICB7IHRpdGxlOiAnTXVtYmFpIERpc3RyaWN0IFJhdGVzJywgdXJsOiAnL3Jlc291cmNlcy9pbmRpYW4tZGlzdHJpY3QtcmF0ZXMvbXVtYmFpJyB9LFxyXG4gICAgICB7IHRpdGxlOiAnQmFuZ2Fsb3JlIERpc3RyaWN0IFJhdGVzJywgdXJsOiAnL3Jlc291cmNlcy9pbmRpYW4tZGlzdHJpY3QtcmF0ZXMvYmFuZ2Fsb3JlJyB9LFxyXG4gICAgICB7IHRpdGxlOiAnQ2hlbm5haSBEaXN0cmljdCBSYXRlcycsIHVybDogJy9yZXNvdXJjZXMvaW5kaWFuLWRpc3RyaWN0LXJhdGVzL2NoZW5uYWknIH1cclxuICAgIF0sXHJcbiAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKCcyMDI0LTAxLTEyJyksXHJcbiAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKCcyMDI0LTAxLTEyJylcclxuICB9LFxyXG4gIHtcclxuICAgIHNsdWc6ICdpbmRpYW4tYnVpbGRpbmctcmVndWxhdGlvbnMnLFxyXG4gICAgdGl0bGU6ICdCdWlsZGluZyBSdWxlcyBhbmQgUmVndWxhdGlvbnMnLFxyXG4gICAgZGVzY3JpcHRpb246ICdCdWlsZGluZyBjb2RlcyBhbmQgcmVndWxhdGlvbnMgZm9yIGNvbnN0cnVjdGlvbiBpbiBJbmRpYS4nLFxyXG4gICAgY2F0ZWdvcnk6ICdSdWxlcyBhbmQgUmVndWxhdGlvbnMnLFxyXG4gICAgcmVnaW9uOiAnSW5kaWEnLFxyXG4gICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNC0wMS0xMCcpLFxyXG4gICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNC0wMS0xMCcpXHJcbiAgfSxcclxuICB7XHJcbiAgICBzbHVnOiAnaW5kaWFuLWNvbnN0cnVjdGlvbi1ub3RlcycsXHJcbiAgICB0aXRsZTogJ0NvbnN0cnVjdGlvbiBOb3RlcycsXHJcbiAgICBkZXNjcmlwdGlvbjogJ0VuZ2luZWVyaW5nIG5vdGVzIGFuZCBndWlkZWxpbmVzIGZvciBjb25zdHJ1Y3Rpb24gcHJvamVjdHMgaW4gSW5kaWEuJyxcclxuICAgIGNhdGVnb3J5OiAnTm90ZXMnLFxyXG4gICAgcmVnaW9uOiAnSW5kaWEnLFxyXG4gICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNC0wMS0wOCcpLFxyXG4gICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNC0wMS0wOCcpXHJcbiAgfSxcclxuICB7XHJcbiAgICBzbHVnOiAnaW5kaWFuLWNvbnN0cnVjdGlvbi1ub3RpY2VzJyxcclxuICAgIHRpdGxlOiAnQ29uc3RydWN0aW9uIE5vdGljZXMnLFxyXG4gICAgZGVzY3JpcHRpb246ICdMYXRlc3Qgbm90aWNlcyBhbmQgdXBkYXRlcyBmcm9tIEluZGlhbiBjb25zdHJ1Y3Rpb24gaW5kdXN0cnkuJyxcclxuICAgIGNhdGVnb3J5OiAnTm90aWNlcycsXHJcbiAgICByZWdpb246ICdJbmRpYScsXHJcbiAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKCcyMDI0LTAxLTA2JyksXHJcbiAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKCcyMDI0LTAxLTA2JylcclxuICB9LFxyXG5cclxuICAvLyBVUyBSZXNvdXJjZXNcclxuICB7XHJcbiAgICBzbHVnOiAndXMtYnVpbGRpbmctY29kZXMnLFxyXG4gICAgdGl0bGU6ICdVUyBCdWlsZGluZyBDb2RlcycsXHJcbiAgICBkZXNjcmlwdGlvbjogJ0FtZXJpY2FuIGJ1aWxkaW5nIGNvZGVzIGFuZCBzdGFuZGFyZHMgaW5jbHVkaW5nIEFDSSwgQUlTQywgYW5kIG90aGVyIHN0cnVjdHVyYWwgZGVzaWduIGNvZGVzLicsXHJcbiAgICBjYXRlZ29yeTogJ0NvZGVzJyxcclxuICAgIHJlZ2lvbjogJ1VTJyxcclxuICAgIHN1Ykl0ZW1zOiBbXHJcbiAgICAgIHsgdGl0bGU6ICdBQ0kgMzE4IC0gQnVpbGRpbmcgQ29kZScsIHVybDogJy9yZXNvdXJjZXMvdXMtYnVpbGRpbmctY29kZXMvYWNpLTMxOCcgfSxcclxuICAgICAgeyB0aXRsZTogJ0FJU0MgU3RlZWwgTWFudWFsJywgdXJsOiAnL3Jlc291cmNlcy91cy1idWlsZGluZy1jb2Rlcy9haXNjLXN0ZWVsJyB9LFxyXG4gICAgICB7IHRpdGxlOiAnSUJDIC0gSW50ZXJuYXRpb25hbCBCdWlsZGluZyBDb2RlJywgdXJsOiAnL3Jlc291cmNlcy91cy1idWlsZGluZy1jb2Rlcy9pYmMnIH0sXHJcbiAgICAgIHsgdGl0bGU6ICdBU0NFIDcgLSBMb2FkIFN0YW5kYXJkcycsIHVybDogJy9yZXNvdXJjZXMvdXMtYnVpbGRpbmctY29kZXMvYXNjZS03JyB9XHJcbiAgICBdLFxyXG4gICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNC0wMS0xMycpLFxyXG4gICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNC0wMS0xMycpXHJcbiAgfSxcclxuICB7XHJcbiAgICBzbHVnOiAndXMtZGlzdHJpY3QtcmF0ZXMnLFxyXG4gICAgdGl0bGU6ICdVUyBEaXN0cmljdCBSYXRlcycsXHJcbiAgICBkZXNjcmlwdGlvbjogJ0NvbnN0cnVjdGlvbiBtYXRlcmlhbCByYXRlcyBhbmQgbGFib3IgY29zdHMgZm9yIG1ham9yIFVTIGNpdGllcyBhbmQgcmVnaW9ucy4nLFxyXG4gICAgY2F0ZWdvcnk6ICdEaXN0cmljdCBSYXRlcycsXHJcbiAgICByZWdpb246ICdVUycsXHJcbiAgICBzdWJJdGVtczogW1xyXG4gICAgICB7IHRpdGxlOiAnTmV3IFlvcmsgQ29uc3RydWN0aW9uIFJhdGVzJywgdXJsOiAnL3Jlc291cmNlcy91cy1kaXN0cmljdC1yYXRlcy9uZXcteW9yaycgfSxcclxuICAgICAgeyB0aXRsZTogJ0NhbGlmb3JuaWEgQ29uc3RydWN0aW9uIFJhdGVzJywgdXJsOiAnL3Jlc291cmNlcy91cy1kaXN0cmljdC1yYXRlcy9jYWxpZm9ybmlhJyB9LFxyXG4gICAgICB7IHRpdGxlOiAnVGV4YXMgQ29uc3RydWN0aW9uIFJhdGVzJywgdXJsOiAnL3Jlc291cmNlcy91cy1kaXN0cmljdC1yYXRlcy90ZXhhcycgfSxcclxuICAgICAgeyB0aXRsZTogJ0Zsb3JpZGEgQ29uc3RydWN0aW9uIFJhdGVzJywgdXJsOiAnL3Jlc291cmNlcy91cy1kaXN0cmljdC1yYXRlcy9mbG9yaWRhJyB9XHJcbiAgICBdLFxyXG4gICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNC0wMS0xMScpLFxyXG4gICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNC0wMS0xMScpXHJcbiAgfSxcclxuICB7XHJcbiAgICBzbHVnOiAndXMtYnVpbGRpbmctcmVndWxhdGlvbnMnLFxyXG4gICAgdGl0bGU6ICdCdWlsZGluZyBSdWxlcyBhbmQgUmVndWxhdGlvbnMnLFxyXG4gICAgZGVzY3JpcHRpb246ICdCdWlsZGluZyBjb2RlcyBhbmQgcmVndWxhdGlvbnMgZm9yIGNvbnN0cnVjdGlvbiBpbiB0aGUgVW5pdGVkIFN0YXRlcy4nLFxyXG4gICAgY2F0ZWdvcnk6ICdSdWxlcyBhbmQgUmVndWxhdGlvbnMnLFxyXG4gICAgcmVnaW9uOiAnVVMnLFxyXG4gICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNC0wMS0wOScpLFxyXG4gICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNC0wMS0wOScpXHJcbiAgfSxcclxuICB7XHJcbiAgICBzbHVnOiAndXMtY29uc3RydWN0aW9uLW5vdGVzJyxcclxuICAgIHRpdGxlOiAnQ29uc3RydWN0aW9uIE5vdGVzJyxcclxuICAgIGRlc2NyaXB0aW9uOiAnRW5naW5lZXJpbmcgbm90ZXMgYW5kIGd1aWRlbGluZXMgZm9yIGNvbnN0cnVjdGlvbiBwcm9qZWN0cyBpbiB0aGUgVVMuJyxcclxuICAgIGNhdGVnb3J5OiAnTm90ZXMnLFxyXG4gICAgcmVnaW9uOiAnVVMnLFxyXG4gICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNC0wMS0wNycpLFxyXG4gICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNC0wMS0wNycpXHJcbiAgfSxcclxuICB7XHJcbiAgICBzbHVnOiAndXMtY29uc3RydWN0aW9uLW5vdGljZXMnLFxyXG4gICAgdGl0bGU6ICdDb25zdHJ1Y3Rpb24gTm90aWNlcycsXHJcbiAgICBkZXNjcmlwdGlvbjogJ0xhdGVzdCBub3RpY2VzIGFuZCB1cGRhdGVzIGZyb20gVVMgY29uc3RydWN0aW9uIGluZHVzdHJ5LicsXHJcbiAgICBjYXRlZ29yeTogJ05vdGljZXMnLFxyXG4gICAgcmVnaW9uOiAnVVMnLFxyXG4gICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNC0wMS0wNScpLFxyXG4gICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNC0wMS0wNScpXHJcbiAgfSxcclxuXHJcbiAgLy8gRXVyb3BlIFJlc291cmNlc1xyXG4gIHtcclxuICAgIHNsdWc6ICdldXJvcGVhbi1idWlsZGluZy1jb2RlcycsXHJcbiAgICB0aXRsZTogJ0V1cm9wZWFuIEJ1aWxkaW5nIENvZGVzJyxcclxuICAgIGRlc2NyaXB0aW9uOiAnRXVyb2NvZGVzIGFuZCBFdXJvcGVhbiBzdGFuZGFyZHMgZm9yIHN0cnVjdHVyYWwgZGVzaWduIGFuZCBjb25zdHJ1Y3Rpb24uJyxcclxuICAgIGNhdGVnb3J5OiAnQ29kZXMnLFxyXG4gICAgcmVnaW9uOiAnRXVyb3BlJyxcclxuICAgIHN1Ykl0ZW1zOiBbXHJcbiAgICAgIHsgdGl0bGU6ICdFTiAxOTkyIC0gRXVyb2NvZGUgMicsIHVybDogJy9yZXNvdXJjZXMvZXVyb3BlYW4tYnVpbGRpbmctY29kZXMvZW4tMTk5MicgfSxcclxuICAgICAgeyB0aXRsZTogJ0VOIDE5OTMgLSBFdXJvY29kZSAzJywgdXJsOiAnL3Jlc291cmNlcy9ldXJvcGVhbi1idWlsZGluZy1jb2Rlcy9lbi0xOTkzJyB9LFxyXG4gICAgICB7IHRpdGxlOiAnRU4gMTk5MCAtIEJhc2lzIG9mIERlc2lnbicsIHVybDogJy9yZXNvdXJjZXMvZXVyb3BlYW4tYnVpbGRpbmctY29kZXMvZW4tMTk5MCcgfSxcclxuICAgICAgeyB0aXRsZTogJ0VOIDE5OTEgLSBBY3Rpb25zIG9uIFN0cnVjdHVyZXMnLCB1cmw6ICcvcmVzb3VyY2VzL2V1cm9wZWFuLWJ1aWxkaW5nLWNvZGVzL2VuLTE5OTEnIH1cclxuICAgIF0sXHJcbiAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKCcyMDI0LTAxLTEzJyksXHJcbiAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKCcyMDI0LTAxLTEzJylcclxuICB9LFxyXG4gIHtcclxuICAgIHNsdWc6ICdldXJvcGVhbi1kaXN0cmljdC1yYXRlcycsXHJcbiAgICB0aXRsZTogJ0V1cm9wZWFuIERpc3RyaWN0IFJhdGVzJyxcclxuICAgIGRlc2NyaXB0aW9uOiAnQ29uc3RydWN0aW9uIG1hdGVyaWFsIHJhdGVzIGFuZCBsYWJvciBjb3N0cyBmb3IgbWFqb3IgRXVyb3BlYW4gY2l0aWVzLicsXHJcbiAgICBjYXRlZ29yeTogJ0Rpc3RyaWN0IFJhdGVzJyxcclxuICAgIHJlZ2lvbjogJ0V1cm9wZScsXHJcbiAgICBzdWJJdGVtczogW1xyXG4gICAgICB7IHRpdGxlOiAnTG9uZG9uIENvbnN0cnVjdGlvbiBSYXRlcycsIHVybDogJy9yZXNvdXJjZXMvZXVyb3BlYW4tZGlzdHJpY3QtcmF0ZXMvbG9uZG9uJyB9LFxyXG4gICAgICB7IHRpdGxlOiAnUGFyaXMgQ29uc3RydWN0aW9uIFJhdGVzJywgdXJsOiAnL3Jlc291cmNlcy9ldXJvcGVhbi1kaXN0cmljdC1yYXRlcy9wYXJpcycgfSxcclxuICAgICAgeyB0aXRsZTogJ0JlcmxpbiBDb25zdHJ1Y3Rpb24gUmF0ZXMnLCB1cmw6ICcvcmVzb3VyY2VzL2V1cm9wZWFuLWRpc3RyaWN0LXJhdGVzL2JlcmxpbicgfSxcclxuICAgICAgeyB0aXRsZTogJ01hZHJpZCBDb25zdHJ1Y3Rpb24gUmF0ZXMnLCB1cmw6ICcvcmVzb3VyY2VzL2V1cm9wZWFuLWRpc3RyaWN0LXJhdGVzL21hZHJpZCcgfVxyXG4gICAgXSxcclxuICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoJzIwMjQtMDEtMDQnKSxcclxuICAgIHVwZGF0ZWRBdDogbmV3IERhdGUoJzIwMjQtMDEtMDQnKVxyXG4gIH0sXHJcbiAge1xyXG4gICAgc2x1ZzogJ2V1cm9wZS1idWlsZGluZy1yZWd1bGF0aW9ucycsXHJcbiAgICB0aXRsZTogJ0J1aWxkaW5nIFJ1bGVzIGFuZCBSZWd1bGF0aW9ucycsXHJcbiAgICBkZXNjcmlwdGlvbjogJ0J1aWxkaW5nIGNvZGVzIGFuZCByZWd1bGF0aW9ucyBmb3IgY29uc3RydWN0aW9uIGluIEV1cm9wZS4nLFxyXG4gICAgY2F0ZWdvcnk6ICdSdWxlcyBhbmQgUmVndWxhdGlvbnMnLFxyXG4gICAgcmVnaW9uOiAnRXVyb3BlJyxcclxuICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoJzIwMjQtMDEtMDMnKSxcclxuICAgIHVwZGF0ZWRBdDogbmV3IERhdGUoJzIwMjQtMDEtMDMnKVxyXG4gIH0sXHJcbiAge1xyXG4gICAgc2x1ZzogJ2V1cm9wZS1jb25zdHJ1Y3Rpb24tbm90ZXMnLFxyXG4gICAgdGl0bGU6ICdDb25zdHJ1Y3Rpb24gTm90ZXMnLFxyXG4gICAgZGVzY3JpcHRpb246ICdFbmdpbmVlcmluZyBub3RlcyBhbmQgZ3VpZGVsaW5lcyBmb3IgY29uc3RydWN0aW9uIHByb2plY3RzIGluIEV1cm9wZS4nLFxyXG4gICAgY2F0ZWdvcnk6ICdOb3RlcycsXHJcbiAgICByZWdpb246ICdFdXJvcGUnLFxyXG4gICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNC0wMS0wMicpLFxyXG4gICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNC0wMS0wMicpXHJcbiAgfSxcclxuICB7XHJcbiAgICBzbHVnOiAnZXVyb3BlLWNvbnN0cnVjdGlvbi1ub3RpY2VzJyxcclxuICAgIHRpdGxlOiAnQ29uc3RydWN0aW9uIE5vdGljZXMnLFxyXG4gICAgZGVzY3JpcHRpb246ICdMYXRlc3Qgbm90aWNlcyBhbmQgdXBkYXRlcyBmcm9tIEV1cm9wZWFuIGNvbnN0cnVjdGlvbiBpbmR1c3RyeS4nLFxyXG4gICAgY2F0ZWdvcnk6ICdOb3RpY2VzJyxcclxuICAgIHJlZ2lvbjogJ0V1cm9wZScsXHJcbiAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKCcyMDI0LTAxLTAxJyksXHJcbiAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKCcyMDI0LTAxLTAxJylcclxuICB9LFxyXG5cclxuICAvLyBPdGhlciBSZWdpb25zIFJlc291cmNlc1xyXG4gIHtcclxuICAgIHNsdWc6ICdpbnRlcm5hdGlvbmFsLWJ1aWxkaW5nLWNvZGVzJyxcclxuICAgIHRpdGxlOiAnSW50ZXJuYXRpb25hbCBCdWlsZGluZyBDb2RlcycsXHJcbiAgICBkZXNjcmlwdGlvbjogJ0J1aWxkaW5nIGNvZGVzIGFuZCBzdGFuZGFyZHMgZnJvbSB2YXJpb3VzIGNvdW50cmllcyB3b3JsZHdpZGUuJyxcclxuICAgIGNhdGVnb3J5OiAnQ29kZXMnLFxyXG4gICAgcmVnaW9uOiAnT3RoZXIgUmVnaW9ucycsXHJcbiAgICBzdWJJdGVtczogW1xyXG4gICAgICB7IHRpdGxlOiAnQ2FuYWRpYW4gQnVpbGRpbmcgQ29kZXMnLCB1cmw6ICcvcmVzb3VyY2VzL2ludGVybmF0aW9uYWwtYnVpbGRpbmctY29kZXMvY2FuYWRhJyB9LFxyXG4gICAgICB7IHRpdGxlOiAnQXVzdHJhbGlhbiBCdWlsZGluZyBDb2RlcycsIHVybDogJy9yZXNvdXJjZXMvaW50ZXJuYXRpb25hbC1idWlsZGluZy1jb2Rlcy9hdXN0cmFsaWEnIH0sXHJcbiAgICAgIHsgdGl0bGU6ICdKYXBhbmVzZSBCdWlsZGluZyBDb2RlcycsIHVybDogJy9yZXNvdXJjZXMvaW50ZXJuYXRpb25hbC1idWlsZGluZy1jb2Rlcy9qYXBhbicgfSxcclxuICAgICAgeyB0aXRsZTogJ1NpbmdhcG9yZSBCdWlsZGluZyBDb2RlcycsIHVybDogJy9yZXNvdXJjZXMvaW50ZXJuYXRpb25hbC1idWlsZGluZy1jb2Rlcy9zaW5nYXBvcmUnIH1cclxuICAgIF0sXHJcbiAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKCcyMDI0LTAxLTE2JyksXHJcbiAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKCcyMDI0LTAxLTE2JylcclxuICB9LFxyXG4gIHtcclxuICAgIHNsdWc6ICdnbG9iYWwtZGlzdHJpY3QtcmF0ZXMnLFxyXG4gICAgdGl0bGU6ICdHbG9iYWwgRGlzdHJpY3QgUmF0ZXMnLFxyXG4gICAgZGVzY3JpcHRpb246ICdDb25zdHJ1Y3Rpb24gbWF0ZXJpYWwgcmF0ZXMgYW5kIGxhYm9yIGNvc3RzIGZyb20gdmFyaW91cyBjb3VudHJpZXMgd29ybGR3aWRlLicsXHJcbiAgICBjYXRlZ29yeTogJ0Rpc3RyaWN0IFJhdGVzJyxcclxuICAgIHJlZ2lvbjogJ090aGVyIFJlZ2lvbnMnLFxyXG4gICAgc3ViSXRlbXM6IFtcclxuICAgICAgeyB0aXRsZTogJ0NhbmFkYSBDb25zdHJ1Y3Rpb24gUmF0ZXMnLCB1cmw6ICcvcmVzb3VyY2VzL2dsb2JhbC1kaXN0cmljdC1yYXRlcy9jYW5hZGEnIH0sXHJcbiAgICAgIHsgdGl0bGU6ICdBdXN0cmFsaWEgQ29uc3RydWN0aW9uIFJhdGVzJywgdXJsOiAnL3Jlc291cmNlcy9nbG9iYWwtZGlzdHJpY3QtcmF0ZXMvYXVzdHJhbGlhJyB9LFxyXG4gICAgICB7IHRpdGxlOiAnSmFwYW4gQ29uc3RydWN0aW9uIFJhdGVzJywgdXJsOiAnL3Jlc291cmNlcy9nbG9iYWwtZGlzdHJpY3QtcmF0ZXMvamFwYW4nIH0sXHJcbiAgICAgIHsgdGl0bGU6ICdTaW5nYXBvcmUgQ29uc3RydWN0aW9uIFJhdGVzJywgdXJsOiAnL3Jlc291cmNlcy9nbG9iYWwtZGlzdHJpY3QtcmF0ZXMvc2luZ2Fwb3JlJyB9XHJcbiAgICBdLFxyXG4gICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNC0wMS0xNCcpLFxyXG4gICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNC0wMS0xNCcpXHJcbiAgfSxcclxuICB7XHJcbiAgICBzbHVnOiAnaW50ZXJuYXRpb25hbC1yZWd1bGF0aW9ucycsXHJcbiAgICB0aXRsZTogJ0ludGVybmF0aW9uYWwgUmVndWxhdGlvbnMnLFxyXG4gICAgZGVzY3JpcHRpb246ICdDb25zdHJ1Y3Rpb24gcmVndWxhdGlvbnMgYW5kIHN0YW5kYXJkcyBmcm9tIHZhcmlvdXMgY291bnRyaWVzLicsXHJcbiAgICBjYXRlZ29yeTogJ1J1bGVzIGFuZCBSZWd1bGF0aW9ucycsXHJcbiAgICByZWdpb246ICdPdGhlciBSZWdpb25zJyxcclxuICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoJzIwMjQtMDEtMTInKSxcclxuICAgIHVwZGF0ZWRBdDogbmV3IERhdGUoJzIwMjQtMDEtMTInKVxyXG4gIH0sXHJcbiAge1xyXG4gICAgc2x1ZzogJ2dsb2JhbC1jb25zdHJ1Y3Rpb24tbm90ZXMnLFxyXG4gICAgdGl0bGU6ICdHbG9iYWwgQ29uc3RydWN0aW9uIE5vdGVzJyxcclxuICAgIGRlc2NyaXB0aW9uOiAnRW5naW5lZXJpbmcgbm90ZXMgYW5kIGd1aWRlbGluZXMgZnJvbSB2YXJpb3VzIGNvdW50cmllcy4nLFxyXG4gICAgY2F0ZWdvcnk6ICdOb3RlcycsXHJcbiAgICByZWdpb246ICdPdGhlciBSZWdpb25zJyxcclxuICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoJzIwMjQtMDEtMTAnKSxcclxuICAgIHVwZGF0ZWRBdDogbmV3IERhdGUoJzIwMjQtMDEtMTAnKVxyXG4gIH0sXHJcbiAge1xyXG4gICAgc2x1ZzogJ2dsb2JhbC1jb25zdHJ1Y3Rpb24tbm90aWNlcycsXHJcbiAgICB0aXRsZTogJ0dsb2JhbCBDb25zdHJ1Y3Rpb24gTm90aWNlcycsXHJcbiAgICBkZXNjcmlwdGlvbjogJ0xhdGVzdCBub3RpY2VzIGFuZCB1cGRhdGVzIGZyb20gZ2xvYmFsIGNvbnN0cnVjdGlvbiBpbmR1c3RyeS4nLFxyXG4gICAgY2F0ZWdvcnk6ICdOb3RpY2VzJyxcclxuICAgIHJlZ2lvbjogJ090aGVyIFJlZ2lvbnMnLFxyXG4gICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNC0wMS0wOCcpLFxyXG4gICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNC0wMS0wOCcpXHJcbiAgfSovXHJcbl1cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRSZXNvdXJjZXNCeUNhdGVnb3J5ID0gKGNhdGVnb3J5OiBzdHJpbmcpID0+IHtcclxuICByZXR1cm4gcmVzb3VyY2VzLmZpbHRlcihyZXNvdXJjZSA9PiByZXNvdXJjZS5jYXRlZ29yeSA9PT0gY2F0ZWdvcnkpXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRSZXNvdXJjZXNCeVJlZ2lvbiA9IChyZWdpb246IHN0cmluZykgPT4ge1xyXG4gIHJldHVybiByZXNvdXJjZXMuZmlsdGVyKHJlc291cmNlID0+IHJlc291cmNlLnJlZ2lvbiA9PT0gcmVnaW9uKVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0UmVzb3VyY2VCeVNsdWcgPSAoc2x1Zzogc3RyaW5nKSA9PiB7XHJcbiAgcmV0dXJuIHJlc291cmNlcy5maW5kKHJlc291cmNlID0+IHJlc291cmNlLnNsdWcgPT09IHNsdWcpXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRDYXRlZ29yeUNvdW50cyA9ICgpID0+IHtcclxuICBjb25zdCBjb3VudHM6IFJlY29yZDxzdHJpbmcsIG51bWJlcj4gPSB7fVxyXG4gIHJlc291cmNlcy5mb3JFYWNoKHJlc291cmNlID0+IHtcclxuICAgIGNvdW50c1tyZXNvdXJjZS5jYXRlZ29yeV0gPSAoY291bnRzW3Jlc291cmNlLmNhdGVnb3J5XSB8fCAwKSArIDFcclxuICB9KVxyXG4gIHJldHVybiBjb3VudHNcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGdldFJlZ2lvbkNvdW50cyA9ICgpID0+IHtcclxuICBjb25zdCBjb3VudHM6IFJlY29yZDxzdHJpbmcsIG51bWJlcj4gPSB7fVxyXG4gIHJlc291cmNlcy5mb3JFYWNoKHJlc291cmNlID0+IHtcclxuICAgIGNvdW50c1tyZXNvdXJjZS5yZWdpb25dID0gKGNvdW50c1tyZXNvdXJjZS5yZWdpb25dIHx8IDApICsgMVxyXG4gIH0pXHJcbiAgcmV0dXJuIGNvdW50c1xyXG59XHJcbiJdLCJuYW1lcyI6WyJyZXNvdXJjZXMiLCJzbHVnIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImNhdGVnb3J5IiwicmVnaW9uIiwic3ViSXRlbXMiLCJjcmVhdGVkQXQiLCJEYXRlIiwidXBkYXRlZEF0IiwidXJsIiwiZ2V0UmVzb3VyY2VzQnlDYXRlZ29yeSIsImZpbHRlciIsInJlc291cmNlIiwiZ2V0UmVzb3VyY2VzQnlSZWdpb24iLCJnZXRSZXNvdXJjZUJ5U2x1ZyIsImZpbmQiLCJnZXRDYXRlZ29yeUNvdW50cyIsImNvdW50cyIsImZvckVhY2giLCJnZXRSZWdpb25Db3VudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/data/resources.ts\n"));

/***/ })

});