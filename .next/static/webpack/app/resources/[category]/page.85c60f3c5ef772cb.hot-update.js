"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/resources/[category]/page",{

/***/ "(app-pages-browser)/./lib/data/resources.ts":
/*!*******************************!*\
  !*** ./lib/data/resources.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCategoryCounts: function() { return /* binding */ getCategoryCounts; },\n/* harmony export */   getRegionCounts: function() { return /* binding */ getRegionCounts; },\n/* harmony export */   getResourceBySlug: function() { return /* binding */ getResourceBySlug; },\n/* harmony export */   getResourcesByCategory: function() { return /* binding */ getResourcesByCategory; },\n/* harmony export */   getResourcesByRegion: function() { return /* binding */ getResourcesByRegion; },\n/* harmony export */   resources: function() { return /* binding */ resources; }\n/* harmony export */ });\nconst resources = [\n    // Nepal Resources\n    {\n        slug: \"nepal-building-codes\",\n        title: \"Nepal Building Codes (NBC)\",\n        description: \"Complete collection of Nepal Building Codes including NBC 105, 205, and other structural design codes.\",\n        category: \"Codes\",\n        region: \"Nepal\",\n        subItems: [\n            {\n                \"title\": \"Nepal Building Code NBC 105:2020 - Seismic Design of Buildings in Nepal\",\n                \"url\": \"https://www.lsmcebps.gov.np/UploadFiles/NBC105_2020.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 206:2024 - Architectural Design Requirements\",\n                \"url\": \"https://giwmscdnone.gov.np/media/pdf_upload/NBC_206_ARCHITECTURAL_DESIGN_REQUIREMENTS-signed.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 207:2003 - Electrical Design Requirements for Public Buildings\",\n                \"url\": \"https://www.iibh.org/kijun/pdf/Nepal_26_NBC_207_2003_Electrical_Design.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 208:2003 - Sanitary and Plumbing Design Requirements\",\n                \"url\": \"https://www.iibh.org/kijun/pdf/Nepal_27_NBC_208_2003_Sanitary_and_Plumbing.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 204:2015 - Guidelines for Earthquake Resistant Building Construction (Earthen Building)\",\n                \"url\": \"https://download.hermes.com.np/nbc-204/\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 203:2015 - Guidelines for Earthquake Resistant Building Construction (Low Strength Masonry)\",\n                \"url\": \"https://download.hermes.com.np/nbc-203/\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 202:2015 - Guidelines on Load Bearing Masonry\",\n                \"url\": \"https://giwmscdnone.gov.np/media/app/public/54/posts/1679824354_21.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 201:1994 - Mandatory Rules of Thumb for Reinforced Concrete Buildings with Masonry Infill\",\n                \"url\": \"https://www.iibh.org/kijun/pdf/Nepal_20_NBC_201_1994_Thumb_RC_with_Masonry.pdf\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 114:1994 - Construction Safety\",\n                \"url\": \"https://www.scribd.com/document/375693803/Nbc-202-Mandatory-Thumb-Rules-for-Load-Bearing-Masonary\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 113:1994 - Aluminium\",\n                \"url\": \"https://www.scribd.com/document/399967810/NBC201\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 112:1994 - Timber\",\n                \"url\": \"https://www.scribd.com/document/399967810/NBC201\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 111:1994 - Steel\",\n                \"url\": \"https://www.scribd.com/document/399967810/NBC201\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 110:1994 - Plain and Reinforced Concrete\",\n                \"url\": \"https://www.scribd.com/document/399967810/NBC201\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 109:1994 - Unreinforced Masonry\",\n                \"url\": \"https://www.scribd.com/document/399967810/NBC201\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 108:1994 - Site Consideration for Seismic Hazards\",\n                \"url\": \"https://www.scribd.com/document/399967810/NBC201\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 107:1994 - Provisional Recommendation on Fire Safety\",\n                \"url\": \"https://www.scribd.com/document/399967810/NBC201\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 106:1994 - Snow Load\",\n                \"url\": \"https://www.scribd.com/document/399967810/NBC201\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 105:1994 - Seismic Design of Buildings in Nepal\",\n                \"url\": \"https://www.scribd.com/document/399967810/NBC201\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 104:1994 - Wind Load\",\n                \"url\": \"https://www.scribd.com/document/399967810/NBC201\"\n            },\n            {\n                \"title\": \"Nepal Building Code NBC 103:1994 - Occupancy Load (Imposed Load)\",\n                \"url\": \"https://www.scribd.com/document/399967810/NBC201\"\n            }\n        ],\n        createdAt: new Date(\"2024-01-15\"),\n        updatedAt: new Date(\"2024-01-15\")\n    },\n    {\n        slug: \"nepal-district-rates\",\n        title: \"Nepal District Rates\",\n        description: \"Construction material rates, labor costs, and equipment rental rates for all districts in Nepal.\",\n        category: \"District Rates\",\n        region: \"Nepal\",\n        subItems: [\n            {\n                title: \"Kathmandu District Rates\",\n                url: \"/resources/nepal-district-rates/kathmandu\"\n            },\n            {\n                title: \"Pokhara District Rates\",\n                url: \"/resources/nepal-district-rates/pokhara\"\n            },\n            {\n                title: \"Lalitpur District Rates\",\n                url: \"/resources/nepal-district-rates/lalitpur\"\n            },\n            {\n                title: \"Bhaktapur District Rates\",\n                url: \"/resources/nepal-district-rates/bhaktapur\"\n            }\n        ],\n        createdAt: new Date(\"2024-01-10\"),\n        updatedAt: new Date(\"2024-01-10\")\n    },\n    {\n        slug: \"nepal-construction-regulations\",\n        title: \"Construction Rules and Regulations\",\n        description: \"Rules and regulations governing construction activities in Nepal.\",\n        category: \"Rules and Regulations\",\n        region: \"Nepal\",\n        createdAt: new Date(\"2024-01-08\"),\n        updatedAt: new Date(\"2024-01-08\")\n    },\n    {\n        slug: \"nepal-construction-notes\",\n        title: \"Construction Notes\",\n        description: \"Practical notes and guidelines for construction projects in Nepal.\",\n        category: \"Notes\",\n        region: \"Nepal\",\n        createdAt: new Date(\"2024-01-05\"),\n        updatedAt: new Date(\"2024-01-05\")\n    },\n    {\n        slug: \"nepal-construction-notices\",\n        title: \"Construction Notices\",\n        description: \"Latest notices and updates from Nepal construction industry.\",\n        category: \"Notices\",\n        region: \"Nepal\",\n        createdAt: new Date(\"2024-01-12\"),\n        updatedAt: new Date(\"2024-01-12\")\n    }\n];\nconst getResourcesByCategory = (category)=>{\n    return resources.filter((resource)=>resource.category === category);\n};\nconst getResourcesByRegion = (region)=>{\n    return resources.filter((resource)=>resource.region === region);\n};\nconst getResourceBySlug = (slug)=>{\n    return resources.find((resource)=>resource.slug === slug);\n};\nconst getCategoryCounts = ()=>{\n    const counts = {};\n    resources.forEach((resource)=>{\n        counts[resource.category] = (counts[resource.category] || 0) + 1;\n    });\n    return counts;\n};\nconst getRegionCounts = ()=>{\n    const counts = {};\n    resources.forEach((resource)=>{\n        counts[resource.region] = (counts[resource.region] || 0) + 1;\n    });\n    return counts;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/data/resources.ts\n"));

/***/ })

});